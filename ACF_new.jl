using Plots
using Distributions
using Random

p = Random.seed!(78978)


# 1) Find corr between random numbers generated by Julia lang
# 2) find corr between rd numbers generated by Logistic Map at r=4


function auto_cov_func(data, k) #auto_covariance function calculated at lag k. data should be in array/Vector format
    if k < 0
        return 1
    else
        n = size(data)[1]
        u = sum(data)/n
        
        sk = 0
        
        for i=1:n-k
            sk += (data[i] - u)*(data[i+k]-u)     
        end
        
        #temp = ( data[1:n-k] .- u .*ones(n-k) ) .*( data[k+1:n] .- u .*ones(n-k) )
        
        return sk/n
    end
end


function ACF(data,k)
    if k<0
        return 1
    else
        return auto_cov_func(data,k) / auto_cov_func(data,0)

    end
end

function return_acf_vals(data)
    n = size(data)[1]
    return [ACF(data,i) for i=1:n]
end


x = Uniform(0,1) #Uniform Distribution variable defined x

data = rand(x,2*(10^4)) # random samples from x


acf_vals = return_acf_vals(data)

k_range = 1:size(acf_vals)[1]

#histogram(acf_vals)

scatter(k_range,acf_vals)

savefig("ACF_plot_new.png")

##########################################################

p = 0:0.01:100
p_sin = sin.(p .-50*ones(size(p)[1]))

plot(p,return_acf_vals(p_sin))

##########################################################



